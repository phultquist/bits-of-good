{"version":3,"sources":["components/Card.tsx","components/Input.tsx","components/ItemInput.tsx","components/TagDropdown.tsx","components/TodoList.tsx","components/ToDoCard.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Card","props","className","smallMargin","children","Input","onChange","type","id","placeholder","value","Tag","onDelete","marginT","toString","onClick","name","ItemInput","removeTag","e","setTags","tags","filter","tag","currentTarget","parentElement","childNodes","textContent","validate","items","every","item","length","React","useState","title","setTitle","date","setDate","tagName","setTagName","event","disabled","adjustedName","toLowerCase","includes","preventDefault","map","newItem","Date","now","tagList","dueDate","completed","onSubmit","sortTypes","SelectableTag","selected","viewBox","width","xmlns","strokeWidth","stroke","d","TagDropdown","forwardRef","ref2","useImperativeHandle","addSelected","forEach","selectedTags","push","splice","indexOf","setSelectedTags","active","setActive","ref","useRef","handleOutsideClick","current","contains","target","useEffect","document","addEventListener","removeEventListener","alt","src","tabIndex","t","ToDoCard","complete","setComplete","checked","version","fill","transform","fillRule","getMonth","getDate","getFullYear","TodoList","sortByDate","setSortByDate","sortByComplete","setSortByComplete","todoItems","setTodoItems","allTags","removeDuplicates","i","reduce","prev","next","concat","currentItems","setCurrentItems","handleSortChange","sortType","arr","index","filtered","sorted","sort","a","b","getTime","sortAndFilterItems","dropdownRef","obj","todo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uOAEe,SAASA,EAAKC,GACzB,OACI,qBAAKC,UAAS,yDAAoDD,EAAME,YAAc,OAAS,SAA/F,SACKF,EAAMG,WCLJ,SAASC,EAAMJ,GAQ1B,OAAO,uBACHK,SAAQ,OAAEL,QAAF,IAAEA,OAAF,EAAEA,EAAOK,SACjBC,MAAW,OAALN,QAAK,IAALA,OAAA,EAAAA,EAAOM,OAAQ,OAAQC,GAAE,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAOO,GACxCC,YAAW,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAOQ,YACpBC,MAAK,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAOS,MACdR,UAAU,0KCRX,SAASS,EAAIV,GAAmG,IAAD,EAClH,OACI,sBAAKC,UAAS,sCAAiCD,EAAMW,SAAW,OAAS,OAA3D,0BAAkF,UAAAX,EAAMY,eAAN,eAAeC,aAAc,IAA/G,kBAAd,UACKb,EAAMW,SAAW,wBAAQG,QAASd,EAAMW,SAAUV,UAAU,OAA3C,kBAAqE,KACtFD,EAAMe,QAKJ,SAASC,EAAUhB,GAC9B,IASMiB,EAAY,SAACC,GACfC,EAAQC,EAAKC,QAAO,SAAAC,GAAG,aAAIA,KAAG,UAAKJ,EAAEK,cAAcC,qBAArB,aAAK,EAA+BC,WAAW,GAAGC,kBAQ9EC,EAAW,SAACC,GAAD,OAA8BA,EAAMC,OAAM,SAAAC,GAAI,OAAIA,EAAKC,OAAS,GAAc,OAATD,MAnBG,EAqBjEE,IAAMC,SAAmB,IArBwC,mBAqBlFb,EArBkF,KAqB5ED,EArB4E,OAsB/Da,IAAMC,SAAiB,IAtBwC,mBAsBlFC,EAtBkF,KAsB3EC,EAtB2E,OAuBjEH,IAAMC,SAAiB,IAvB0C,mBAuBlFG,EAvBkF,KAuB5EC,EAvB4E,OAwB3DL,IAAMC,SAAiB,IAxBoC,mBAwBlFK,EAxBkF,KAwBzEC,EAxByE,KA0BzF,OACI,cAACxC,EAAD,UACI,iCACI,sBAAKE,UAAU,OAAf,UACI,mBAAGA,UAAU,kBAAb,mBACA,cAACG,EAAD,CAAOK,MAAOyB,EAAO7B,SAAU,SAACmC,GAAD,OAAWL,EAASK,EAAMjB,cAAcd,aAE3E,gCACI,qBAAKR,UAAU,kBAAf,SACI,mBAAGA,UAAU,aAAb,oBAEJ,sBAAKA,UAAU,yBAAf,UACI,cAACG,EAAD,CAAOC,SAxBN,SAACa,GAClBqB,EAAWrB,EAAEK,cAAcd,QAuBoBA,MAAO6B,IACtC,wBAAQG,WAAYH,EAAQP,OAAS,GAAiB,OAAZO,GAAmBxB,QAtClE,SAACI,GACZ,IAAIwB,EAAeJ,EAAQK,cACpBD,IAAgBtB,EAAKwB,SAASF,KACjCxB,EAAE2B,iBACF1B,EAAQ,GAAD,mBAAKC,GAAL,CAAWsB,MAEtBH,EAAW,KAgCmFtC,UAAU,oJAAxF,oBAIJ,qBAAKA,UAAU,0CAAf,SACKmB,EAAK0B,KAAI,SAAAxB,GAAG,OAAI,cAACZ,EAAD,CAAeC,SAAUM,EAAWF,KAAMO,GAAhCA,WAGnC,sBAAKrB,UAAU,cAAf,UACI,mBAAGA,UAAU,kBAAb,sBACA,cAACG,EAAD,CAAOE,KAAK,OAAOG,MAAO2B,EAAM5B,YAAY,aAAaH,SAAU,SAACmC,GAAD,OAAWH,EAAQG,EAAMjB,cAAcd,aAE9G,qBAAKR,UAAU,cAAf,SACI,wBAAQa,QAAS,WACb,GAAIa,EAAS,CAACO,EAAOE,IAAQ,CACzB,IAAMW,EAAoB,CACtBxC,GAAIyC,KAAKC,MACTf,MAAOA,EACPgB,QAAS9B,EACT+B,QAAS,IAAIH,KAAKZ,GAClBgB,WAAW,GAEfjB,EAAS,IACTE,EAAQ,IACRlB,EAAQ,IACRnB,EAAMqD,SAASN,EAASC,KAAKC,SAElCR,UAAWd,EAAS,CAACO,EAAOE,IAAQnC,UAAU,kGAdjD,2BC/DpB,IC2BKqD,ED3BCC,EAAgB,SAACvD,GAEnB,OAAO,sBAAKc,QAAS,SAACI,GAClBlB,EAAMc,QAAQI,IACfjB,UAAS,+HAA0HD,EAAMwD,SAAW,cAAgB,YAFhK,UAGa,YAAfxD,EAAMe,KACH,sBAAMd,UAAU,6BAAhB,qBACA,cAACS,EAAD,CAAKK,KAAMf,EAAMe,KAAMH,QAAS,IAEnCZ,EAAMwD,SAAW,qBAAKvD,UAAU,OAAOwD,QAAQ,aAAaC,MAAM,KAAKC,MAAM,6BAA5D,SAA0F,sBAAMC,YAAY,IAAIC,OAAO,QAAQC,EAAE,sFAA6F,SAoEzOC,EAhEKC,sBAAW,SAAChE,EAAmEiE,GAG/FC,8BAAoBD,GAAM,iBAAO,CAC7BE,YAD6B,SACjB/C,GACRA,EAAKgD,SAAQ,SAAA9C,GACJ+C,EAAazB,SAAStB,IACvB+C,EAAaC,KAAKhD,WAO9BtB,EAAMoB,KAAKwB,SAAS,aACpB5C,EAAMoB,KAAKmD,OAAOvE,EAAMoB,KAAKoD,QAAQ,WAAY,GACjDxE,EAAMoB,KAAKkD,KAAK,YAhBoF,MAmBhEtC,IAAMC,SAAmBjC,EAAMoB,MAnBiC,mBAmBjGiD,EAnBiG,KAmBnFI,EAnBmF,OAoB5EzC,IAAMC,UAAS,GApB6D,mBAoBjGyC,EApBiG,KAoBzFC,EApByF,KAqBlGC,EAAMC,iBAAuB,MAE7BC,EAAqB,SAAC5D,GACpB0D,EAAIG,SAA2B,OAAhBH,EAAIG,UAAsBH,EAAIG,QAAQC,SAAS9D,EAAE+D,SAChEN,GAAU,IAIZtE,EAAWL,EAAMK,SAcvB,OAXA6E,qBAAU,WACN7E,EAASgE,KACV,CAACA,EAAchE,IAGlB6E,qBAAU,WAEN,OADAC,SAASC,iBAAiB,QAASN,GAAoB,GAChD,WACHK,SAASE,oBAAoB,QAASP,GAAoB,MAE/D,IAEC,sBAAK7E,UAAU,qBAAf,UACI,yBAAQa,QAAS,kBAAM6D,GAAWD,IAASzE,UAAS,0EAAuEoE,EAAatC,SAAW/B,EAAMoB,KAAKW,QAAY2C,EAAiB,cAAP,MAApL,UACKL,EAAatC,SAAW/B,EAAMoB,KAAKW,OAAS,WAAcsC,EAAatC,QAAkC,IAAxBsC,EAAatC,OAAe,OAAS,SACvH,qBAAK9B,UAAU,uBAAuBqF,IAAI,IAAIC,IAAI,wEAEtD,qBAAKtF,UAAU,kBAAf,SACI,qBAAK2E,IAAKA,EAAKY,SAAU,EAAGvF,UAAS,UAAKyE,EAAS,KAAO,SAArB,iGAArC,SACK1E,EAAMoB,KAAK0B,KAAI,SAAAxB,GAAG,OAAI,cAAC,EAAD,CAAyBP,KAAMO,EAAKkC,SAAUa,EAAazB,SAAStB,GAAMR,QAAS,SAACI,GAClGmD,EAAazB,SAAStB,GAGvBmD,EAAgBJ,EAAahD,QAAO,SAAAoE,GAAC,OAAIA,IAAMnE,MAF/CmD,EAAgB,GAAD,mBAAKJ,GAAL,CAAmB/C,OAFCA,gB,OE9DhD,SAASoE,EAAS1F,GAC7B,IAD2F,EAM7DgC,IAAMC,SAAkBjC,EAAM8B,KAAKsB,WAN0B,mBAMtFuC,EANsF,KAM5EC,EAN4E,KAO3F,OACI,eAAC7F,EAAD,CAAuBG,aAAa,EAApC,UACI,sBAAKD,UAAU,2BAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOI,SAVH,SAACa,GACjB0E,GAAaD,GACb3F,EAAMK,SAAN,2BAAoBL,EAAM8B,MAA1B,IAAgCsB,WAAYuC,MAQFrF,KAAK,WAAWuF,QAASF,EAAU1F,UAAU,4DAC3E,qBAAKA,UAAU,iKAAf,SACI,qBAAKA,UAAU,iEAAiE6F,QAAQ,MAAMrC,QAAQ,YAAYE,MAAM,6BAAxH,SACI,mBAAGoC,KAAK,OAAR,SACI,mBAAGC,UAAU,oBAAoBD,KAAK,OAAOE,SAAS,UAAtD,SACI,sBAAMrC,YAAY,KAAKE,EAAE,4UAKzC,oBAAI7D,UAAU,OAAd,SAAsBD,EAAM8B,KAAKI,WAErC,oBAAIjC,UAAU,iBAAd,SAAgCD,EAAM8B,KAAKqB,QAAQ+C,WAAa,EAAI,IAAMlG,EAAM8B,KAAKqB,QAAQgD,UAAY,IAAMnG,EAAM8B,KAAKqB,QAAQiD,mBAEtI,qBAAKnG,UAAU,0CAAf,SACKD,EAAM8B,KAAKoB,QAAQ7B,QAAO,SAAAC,GAAG,MAAY,YAARA,KAAmBwB,KAAI,SAAAxB,GAAG,OAAI,cAACZ,EAAD,CAAeK,KAAMO,GAAXA,UAlBvE0B,KAAKC,ODsBT,SAASoD,IAAY,IAAD,EACGrE,IAAMC,UAAS,GADlB,mBAC1BqE,EAD0B,KACdC,EADc,OAEWvE,IAAMC,UAAS,GAF1B,mBAE1BuE,EAF0B,KAEVC,EAFU,OAICzE,IAAMC,SACtC,CAAC,CACC1B,GAAI,EACJ2B,MAAO,iBACPiB,QAAS,IAAIH,KAAK,6BAClBE,QAAS,CAAC,OAAQ,gBAClBE,WAAW,GAEb,CACE7C,GAAI,EACJ2B,MAAO,kBACPiB,QAAS,IAAIH,KAAK,4BAClBE,QAAS,CAAC,gBAAiB,OAC3BE,WAAW,GAEb,CACE7C,GAAI,EACJ2B,MAAO,qBACPiB,QAAS,IAAIH,KAAK,+BAClBE,QAAS,CAAC,gBAAiB,OAC3BE,WAAW,GAEb,CACE7C,GAAI,EACJ2B,MAAO,eACPiB,QAAS,IAAIH,KAAK,8BAClBE,QAAS,CAAC,eAAgB,OAAQ,WAClCE,WAAW,GAEb,CACE7C,GAAI,EACJ2B,MAAO,gBACPiB,QAAS,IAAIH,KAAK,6BAClBE,QAAS,CAAC,WACVE,WAAW,KAtCkB,mBAI1BsD,EAJ0B,KAIfC,EAJe,KAyC3BC,EAAU,WACd,OAA4B,IAArBF,EAAU3E,OAAe,GAAK8E,EAAiBH,EAAU5D,KAAI,SAAAgE,GAAC,OAAIA,EAAE5D,WAAS6D,QAAO,SAACC,EAAMC,GAAP,OAAgBD,EAAKE,OAAOD,QA1CxF,EA6COjF,IAAMC,SAAmB2E,KA7ChC,mBA6C1BvC,EA7C0B,KA6CZI,EA7CY,OA8COzC,IAAMC,SAAqB,IA9ClC,mBA8C1BkF,EA9C0B,KA8CZC,EA9CY,KAiD3BC,EAAmB,SAACnG,GAExB,IAAIoG,EAAWpG,EAAEK,cAAchB,GAC3B+G,IAAahE,EAAUlB,KACzBmE,GAAeD,GACNgB,IAAahE,EAAUqC,UAChCc,GAAmBD,IAIvB,SAASK,EAAuBU,GAI9B,OAHaA,EAAIlG,QAAO,SAACS,EAAM0F,GAC7B,OAAOD,EAAI/C,QAAQ1C,KAAU0F,KAMjCtC,qBAAU,YACmB,WACzB,IAAIuC,EAAuB,GAC3BpD,EAAaD,SAAQ,SAAA9C,GACnBmG,EAAWA,EAASP,OAAOR,EAAUrF,QAAO,SAAAS,GAAI,OAAIA,EAAKoB,QAAQN,SAAStB,UAG5E,IAAIoG,GADJD,EAAWZ,EAAiBY,IACNE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAErH,GAAKsH,EAAEtH,MAC1C+F,IACFoB,EAASA,EAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzE,QAAQ2E,UAAYD,EAAE1E,QAAQ2E,cAE7DtB,IACFkB,EAASA,EAAOC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAExE,UAAY,EAAI,IAAMyE,EAAEzE,UAAY,EAAI,OAG5EgE,EAAgBM,GAIlBK,KACC,CAACrB,EAAWJ,EAAYE,EAAgBnC,IAE3C,IAAM2D,EAAchG,IAAM6C,SAE1B,OACE,sBAAK5E,UAAU,yCAAf,UACE,oBAAIA,UAAU,0BAAd,qBACA,mBAAGA,UAAU,6BAAb,wCACA,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,8BACE,cAACe,EAAD,CAAWqC,SAAU,SAACvB,GAAU,IAAD,EACD,IAAxBA,EAAKoB,QAAQnB,SAAcD,EAAKoB,QAAU,CAAC,YAC/CyD,EAAa,GAAD,mBAAKD,GAAL,CAAgB5E,KAG5B,UAAAkG,EAAYjD,eAAZ,SAAqBZ,YAAYrC,EAAKoB,cAGpB,IAArBwD,EAAU3E,OAAe,mBAAG9B,UAAU,8BAAb,sBAA0D,mCAClF,sBAAKA,UAAU,4DAAf,UACE,wBAAQa,QAASuG,EAAkB9G,GAAI+C,EAAUqC,SAAU1F,UAAS,wDAAmDuG,EAAiB,SAAW,MAAnJ,6BACA,cAAC,EAAD,CAAa5B,IAAKoD,EAAa5G,KAAMwF,IAAUe,MAAK,SAACC,EAAGC,GACtD,OAAID,EAAIC,GAAa,EACjBD,EAAIC,EAAY,EACb,KACLxH,SAAU,SAACmD,GACbiB,EAAgBjB,MAGlB,wBAAQ1C,QAASuG,EAAkB9G,GAAI+C,EAAUlB,KAAMnC,UAAS,wDAAmDqG,EAAa,SAAW,MAA3I,+BAEJ,8BAC2B,IAAxBa,EAAapF,OAAe,mBAAG9B,UAAU,8BAAb,sBAA0DkH,EAAarE,KAAI,SAAChB,GAEvG,OACE,cAAC4D,EAAD,CAAwB5D,KAAMA,EAAMzB,SAAU,SAAC4H,GAC7CtB,EAAaD,EAAU5D,KAAI,SAACoF,GAC1B,OAAOA,EAAK3H,KAAO0H,EAAI1H,GAAK0H,EAAMC,QAFvBpG,EAAKvB,SAQ1B,8BACE,mBAAGN,UAAU,mCAAb,6C,SAzIPqD,K,iBAAAA,E,0BAAAA,M,KElBU6E,MARf,WACE,OACE,qBAAKlI,UAAU,MAAf,SACE,cAACoG,EAAD,OCKS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5D,SAAS6D,eAAe,SAM1BZ,K","file":"static/js/main.ccbe098b.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Card(props: {children: React.ReactNode, smallMargin?: boolean}) {\n    return (\n        <div className={`flex-none py-4 px-8 bg-white shadow rounded-lg ${props.smallMargin ? \"my-4\" : \"my-10\"}`}>\n            {props.children}\n        </div>\n    )\n}","export default function Input(props?:\n    {\n        placeholder?: string,\n        id?: string,\n        onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\n        value?: string\n        type?: string\n    }) {\n    return <input\n        onChange={props?.onChange}\n        type={props?.type || \"text\"} id={props?.id}\n        placeholder={props?.placeholder}\n        value={props?.value}\n        className=\"h-10 bg-gray-100 appearance-none border focus:ring-blue-500 focus:ring-1 rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n    />\n}","import React, { MouseEvent, ChangeEvent } from 'react'\nimport Card from './Card';\nimport Input from './Input';\nimport { TodoItem } from './TodoList';\n\nexport function Tag(props: { name: string, marginT?: number, onDelete?: (e: MouseEvent<HTMLButtonElement>) => void }) {\n    return (\n        <div className={`flex bg-blue-100 rounded-md ${props.onDelete ? \"px-3\" : \"px-4\"} py-2 mx-1 mt-${props.marginT?.toString() || \"4\"} text-gray-600`}>\n            {props.onDelete ? <button onClick={props.onDelete} className=\"mr-2\">&times;</button> : null}\n            {props.name}\n        </div>\n    )\n}\n\nexport default function ItemInput(props: { onSubmit: (item: TodoItem, id: number) => void }) {\n    const addTag = (e: MouseEvent<HTMLButtonElement>) => {\n        let adjustedName = tagName.toLowerCase();\n        if (!(!adjustedName || tags.includes(adjustedName))) {\n            e.preventDefault();\n            setTags([...tags, adjustedName]);\n        }\n        setTagName(\"\");\n    }\n\n    const removeTag = (e: MouseEvent<HTMLButtonElement>) => {\n        setTags(tags.filter(tag => tag !== e.currentTarget.parentElement?.childNodes[1].textContent));\n    }\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setTagName(e.currentTarget.value);\n    }\n\n    // const validate = (items: string[]) => items.every(item => item.length > 0 && item !== null);\n    const validate = (items: string[]): boolean => items.every(item => item.length > 0 && item !== null);\n\n    const [tags, setTags] = React.useState<string[]>([]);\n    const [title, setTitle] = React.useState<string>('');\n    const [date, setDate] = React.useState<string>('');\n    const [tagName, setTagName] = React.useState<string>('');\n\n    return (\n        <Card>\n            <form>\n                <div className=\"pt-2\">\n                    <p className=\"float-left my-2\">Title</p>\n                    <Input value={title} onChange={(event) => setTitle(event.currentTarget.value)} />\n                </div>\n                <div>\n                    <div className=\"w-full h-8 mt-4\">\n                        <p className=\"float-left\">Tags</p>\n                    </div>\n                    <div className=\"relative text-gray-700\">\n                        <Input onChange={handleChange} value={tagName} />\n                        <button disabled={!(tagName.length > 0 && tagName !== null)} onClick={addTag} className=\"transition-opacity disabled:opacity-50 absolute h-10 bottom-0 inset-y-0 right-0 flex items-center px-4 font-bold text-white bg-blue-500 rounded-r\">\n                            Add\n                        </button>\n                    </div>\n                    <div className=\"flex flex-wrap justify-start max-w-full\" >\n                        {tags.map(tag => <Tag key={tag} onDelete={removeTag} name={tag} />)}\n                    </div>\n                </div>\n                <div className=\"w-full mt-2\">\n                    <p className=\"float-left my-2\">Due Date</p>\n                    <Input type=\"date\" value={date} placeholder=\"mm/dd/yyyy\" onChange={(event) => setDate(event.currentTarget.value)} />\n                </div>\n                <div className=\"w-full mt-2\">\n                    <button onClick={() => {\n                        if (validate([title, date])) {\n                            const newItem: TodoItem = {\n                                id: Date.now(),\n                                title: title,\n                                tagList: tags,\n                                dueDate: new Date(date),\n                                completed: false\n                            }\n                            setTitle('');\n                            setDate('');\n                            setTags([]);\n                            props.onSubmit(newItem, Date.now());\n                        }\n                    }} disabled={!validate([title, date])} className=\"transition-opacity w-full bg-blue-500 rounded text-white font-bold p-2 my-4 disabled:opacity-50\">Create</button>\n                </div>\n            </form>\n        </Card>\n    )\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useRef } from \"react\";\nimport { Tag } from \"./ItemInput\";\n\nconst SelectableTag = (props: { name: string, selected: boolean, onClick: (e: React.MouseEvent<HTMLDivElement>) => void }) => {\n\n    return <div onClick={(e) => {\n        props.onClick(e);\n    }} className={`max-h-14 border-b border-gray-200 flex justify-between pl-2 pr-4 py-2.5 font-normal hover:bg-gray-200 cursor-pointer ${props.selected ? \"bg-gray-100\" : \"bg-white\"}`}>\n        {props.name === \"no-tags\" ?\n            <span className=\"text-gray-600 ml-2 text-sm\">no tags</span> :\n            <Tag name={props.name} marginT={0} />\n        }\n        {props.selected ? <svg className=\"flex\" viewBox=\"-4 0 30 24\" width=\"10\" xmlns=\"http://www.w3.org/2000/svg\" ><path strokeWidth=\"3\" stroke=\"black\" d=\"M24 4.685l-16.327 17.315-7.673-9.054.761-.648 6.95 8.203 15.561-16.501.728.685z\" /></svg> : null}\n    </div>\n};\n\nconst TagDropdown = forwardRef((props: { tags: string[], onChange: (selected: string[]) => void }, ref2) => {\n\n    // when a new item is created, the tags need to be added to the list of selected tags\n    useImperativeHandle(ref2, () => ({\n        addSelected(tags: string[]) {\n            tags.forEach(tag => {\n                if (!selectedTags.includes(tag)) {\n                    selectedTags.push(tag);\n                }\n            })\n        }\n    }));\n\n    // pushes no tags to the bottom of the list\n    if (props.tags.includes(\"no-tags\")) {\n        props.tags.splice(props.tags.indexOf(\"no-tags\"), 1);\n        props.tags.push(\"no-tags\");\n    }\n\n    const [selectedTags, setSelectedTags] = React.useState<string[]>(props.tags);\n    const [active, setActive] = React.useState(false);\n    const ref = useRef<HTMLDivElement>(null);\n\n    const handleOutsideClick = (e: MouseEvent) => {\n        if (ref.current && ref.current !== null && !(ref.current.contains(e.target as Node))) {\n            setActive(false);\n        }\n    }\n\n    const onChange = props.onChange;\n\n    // calls onChange when the selected tags change\n    useEffect(() => {\n        onChange(selectedTags);\n    }, [selectedTags, onChange])\n\n    // closes window when clicking outside\n    useEffect(() => {\n        document.addEventListener('click', handleOutsideClick, true);\n        return () => {\n            document.removeEventListener('click', handleOutsideClick, true);\n        };\n    }, []);\n    return (\n        <div className=\"relative flex-grow\">\n            <button onClick={() => setActive(!active)} className={`hover:bg-gray-200 transition-colors font-bold px-4 py-2 rounded ${((selectedTags.length === props.tags.length) && !active) ? null : \"bg-gray-200\"}`}>\n                {selectedTags.length === props.tags.length ? \"All Tags\" : (selectedTags.length + (selectedTags.length === 1 ? \" Tag\" : \" Tags\"))}\n                <img className=\"inline h-4 mb-1 ml-1\" alt=\"v\" src=\"https://img.icons8.com/ios-glyphs/30/000000/expand-arrow--v1.png\" />\n            </button>\n            <div className=\"w-full absolute\">\n                <div ref={ref} tabIndex={0} className={`${active ? null : \"hidden\"} overflow-scroll border min-w-md border-gray-200 bg-white rounded-lg shadow-2xl mx-8 max-h-96`}>\n                    {props.tags.map(tag => <SelectableTag key={tag} name={tag} selected={selectedTags.includes(tag)} onClick={(e) => {\n                        if (!selectedTags.includes(tag)) {\n                            setSelectedTags([...selectedTags, tag]);\n                        } else {\n                            setSelectedTags(selectedTags.filter(t => t !== tag));\n                        }\n                    }} />)}\n                </div>\n            </div>\n        </div>\n    )\n});\n\nexport default TagDropdown;","import React, { useEffect } from 'react'\nimport ItemInput from './ItemInput';\nimport TagDropdown from './TagDropdown';\nimport ToDoCard from './ToDoCard';\n\n/**\n * Thank you for applying to Bits of Good. You are free to add/delete/modify any \n * parts of this project. That includes changing the types.ts, creating css files, \n * modifying import statements, using contexts, etc. We do recommend to keep it simple. \n * You will not be judged based on complexity. We also recommend using \n * multiple components instead of coding everything on this file :)\n * \n * Have fun! Please reach out to hello@bitsofgood.org or wkim330@gatech.edu if you\n * have any questions!\n * \n * Bits of Good Engineering Team\n * \n */\n// TODO: Start coding from here\n\n// Here's a baseline todo item type. \n// Feel free to extend or create your own interface!\nexport type TodoItem = {\n  id: number,\n  title: string,\n  dueDate: Date,\n  tagList: string[],\n  completed: boolean,\n}\n\nenum sortTypes {\n  date = \"sort-date\",\n  complete = \"sort-complete\"\n}\n\nexport default function TodoList() {\n  const [sortByDate, setSortByDate] = React.useState(false);\n  const [sortByComplete, setSortByComplete] = React.useState(false);\n  // Sample Data to make it easier for someone to view\n  const [todoItems, setTodoItems] = React.useState<TodoItem[]>(\n    [{\n      id: 0,\n      title: 'Do the Laundry',\n      dueDate: new Date('January 17, 2022 00:00:00'),\n      tagList: [\"home\", \"low priority\"],\n      completed: false\n    },\n    {\n      id: 1,\n      title: 'Pick Charlie Up',\n      dueDate: new Date('August 31, 2021 00:00:00'),\n      tagList: [\"high priority\", \"car\"],\n      completed: true\n    },\n    {\n      id: 2,\n      title: 'Replace Spare Tire',\n      dueDate: new Date('September 17, 2021 00:00:00'),\n      tagList: [\"high priority\", \"car\"],\n      completed: true\n    },\n    {\n      id: 3,\n      title: 'Find a Movie',\n      dueDate: new Date('December 17, 2021 00:00:00'),\n      tagList: [\"low priority\", \"home\", \"weekend\"],\n      completed: false\n    },\n    {\n      id: 4,\n      title: 'Buy Groceries',\n      dueDate: new Date('January 16, 2022 00:00:00'),\n      tagList: [\"no-tags\"],\n      completed: false\n    }]);\n\n  const allTags = () => {\n    return todoItems.length === 0 ? [] : removeDuplicates(todoItems.map(i => i.tagList).reduce((prev, next) => prev.concat(next)));\n  }\n\n  const [selectedTags, setSelectedTags] = React.useState<string[]>(allTags());\n  const [currentItems, setCurrentItems] = React.useState<TodoItem[]>([]);\n\n\n  const handleSortChange = (e: React.MouseEvent<HTMLButtonElement>): void => {\n    // I've made one function to handle sorting, because in the case that more sorting methods were to be added, this would be much easier.\n    let sortType = e.currentTarget.id;\n    if (sortType === sortTypes.date) {\n      setSortByDate(!sortByDate);\n    } else if (sortType === sortTypes.complete) {\n      setSortByComplete(!sortByComplete);\n    }\n  }\n\n  function removeDuplicates<Type>(arr: Type[]): Type[] {\n    let unique = arr.filter((item, index) => {\n      return arr.indexOf(item) === index;\n    });\n    return unique;\n  }\n\n  // resorts/filters items any time any of the relating states change\n  useEffect(() => {\n    const sortAndFilterItems = (): TodoItem[] => {\n      let filtered: TodoItem[] = [];\n      selectedTags.forEach(tag => {\n        filtered = filtered.concat(todoItems.filter(item => item.tagList.includes(tag)));\n      })\n      filtered = removeDuplicates(filtered);\n      let sorted = filtered.sort((a, b) => a.id - b.id);\n      if (sortByDate) {\n        sorted = sorted.sort((a, b) => a.dueDate.getTime() - b.dueDate.getTime());\n      }\n      if (sortByComplete) {\n        sorted = sorted.sort((a, b) => (a.completed ? 1 : 0) - (b.completed ? 1 : 0));\n      };\n\n      setCurrentItems(sorted);\n      return sorted;\n    }\n\n    sortAndFilterItems();\n  }, [todoItems, sortByDate, sortByComplete, selectedTags]);\n\n  const dropdownRef = React.useRef<any>();\n\n  return (\n    <div className=\"p-10 bg-gray-100 min-h-screen w-screen\">\n      <h1 className=\"text-6xl\ttext-blue-500\">Up Next</h1>\n      <p className=\"text-sm text-gray-600 mt-4\">A BITS OF GOOD APPLICATION</p>\n      <div className=\"flex justify-center\">\n        <div className=\"w-full max-w-2xl\">\n          <div>\n            <ItemInput onSubmit={(item) => {\n              if (item.tagList.length === 0) item.tagList = [\"no-tags\"];\n              setTodoItems([...todoItems, item]);\n\n              // Adds the new item to the selected tags\n              dropdownRef.current?.addSelected(item.tagList);\n            }} />\n          </div>\n          {todoItems.length === 0 ? <p className=\"text-sm text-gray-600 mt-10\">No Items</p> : <>\n            <div className=\"flex justify-between px-4 text-sm font-bold text-gray-600\">\n              <button onClick={handleSortChange} id={sortTypes.complete} className={`transition-colors font-bold px-4 py-2 rounded ${sortByComplete ? \"active\" : null}`}>Group Completed</button>\n              <TagDropdown ref={dropdownRef} tags={allTags().sort((a, b) => {\n                if (a < b) { return -1; }\n                if (a > b) { return 1; }\n                return 0;\n              })} onChange={(selected: string[]) => {                \n                setSelectedTags(selected);\n              }} />\n              {/* <button onClick={() => }>test</button> */}\n              <button onClick={handleSortChange} id={sortTypes.date} className={`transition-colors font-bold px-4 py-2 rounded ${sortByDate ? \"active\" : null}`}>Sort By Date</button>\n            </div></>}\n          <div>\n            {currentItems.length === 0 ? <p className=\"text-sm text-gray-600 mt-10\">No Items</p> : currentItems.map((item) => {\n              // console.log(\"building\", todoItems, selectedTags);\n              return (\n                <ToDoCard key={item.id} item={item} onChange={(obj: TodoItem) => {\n                  setTodoItems(todoItems.map((todo) => {\n                    return todo.id === obj.id ? obj : todo;\n                  }))\n                }} />\n              )\n            })}\n          </div>\n          <div>\n            <p className=\"my-2 mt-14 text-sm text-gray-600\">BY PATRICK HULTQUIST</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import Card from './Card';\nimport { TodoItem } from './TodoList';\nimport { Tag } from './ItemInput';\nimport React from 'react';\n\nexport default function ToDoCard(props: { item: TodoItem, onChange: (obj: TodoItem) => void }) {\n    const handleCheck = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setComplete(!complete);\n        props.onChange({ ...props.item, completed: !complete });\n    }\n\n    let [complete, setComplete] = React.useState<boolean>(props.item.completed);\n    return (\n        <Card key={Date.now()} smallMargin={true}>\n            <div className=\"flex justify-between p-2\">\n                <div className=\"inline-flex\">\n                    <input onChange={handleCheck} type=\"checkbox\" checked={complete} className=\"cursor-pointer form-checkbox opacity-0 absolute w-5 h-5\"></input>\n                    <div className=\"mt-0.5 rounded-sm bg-white border-2 border-gray-500 w-5 h-5 flex flex-shrink-0 justify-center items-center mr-2 focus-within:border-blue-500 transition-colors\">\n                        <svg className=\"fill-current hidden w-3 h-3 text-white-600 pointer-events-none\" version=\"1.1\" viewBox=\"0 0 17 12\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <g fill=\"none\">\n                                <g transform=\"translate(-9 -11)\" fill=\"#FFF\" fillRule=\"nonzero\" >\n                                    <path strokeWidth=\"10\" d=\"m25.576 11.414c0.56558 0.55188 0.56558 1.4439 0 1.9961l-9.404 9.176c-0.28213 0.27529-0.65247 0.41385-1.0228 0.41385-0.37034 0-0.74068-0.13855-1.0228-0.41385l-4.7019-4.588c-0.56584-0.55188-0.56584-1.4442 0-1.9961 0.56558-0.55214 1.4798-0.55214 2.0456 0l3.679 3.5899 8.3812-8.1779c0.56558-0.55214 1.4798-0.55214 2.0456 0z\" />\n                                </g>\n                            </g>\n                        </svg>\n                    </div>\n                    <h2 className=\"ml-2\">{props.item.title}</h2>\n                </div>\n                <h2 className=\"text-sm mt-0.5\">{props.item.dueDate.getMonth() + 1 + \"/\" + props.item.dueDate.getDate() + \"/\" + props.item.dueDate.getFullYear()}</h2>\n            </div>\n            <div className=\"flex flex-wrap justify-start max-w-full\" >\n                {props.item.tagList.filter(tag => tag !== \"no-tags\").map(tag => <Tag key={tag} name={tag} />)}\n                {/* {props.item.tagList.map(tag => <Tag key={tag} onDelete={removeTag} name={tag} />)} */}\n            </div>\n        </Card>\n    )\n}","import './App.css';\nimport TodoList from './components/TodoList';\nimport './index.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}